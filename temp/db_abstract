-- Users table for Login & Signup
CREATE TABLE Users (
    UserID INT PRIMARY KEY AUTO_INCREMENT,
    Username VARCHAR(255) NOT NULL,
    PasswordHash VARCHAR(255) NOT NULL,
    Email VARCHAR(255) NOT NULL,
    TwoFactorAuthEnabled BOOLEAN
);

-- Projects table for Add project (Host)
CREATE TABLE Projects (
    ProjectID INT PRIMARY KEY AUTO_INCREMENT,
    Title VARCHAR(255) NOT NULL,
    Description TEXT,
    CreatorUserID INT,
    FOREIGN KEY (CreatorUserID) REFERENCES Users(UserID)
);

-- Contributions table for Request contribution
CREATE TABLE Contributions (
    ContributionID INT PRIMARY KEY AUTO_INCREMENT,
    UserID INT,
    ProjectID INT,
    Status ENUM('Requested', 'Accepted', 'Rejected'),
    FOREIGN KEY (UserID) REFERENCES Users(UserID),
    FOREIGN KEY (ProjectID) REFERENCES Projects(ProjectID)
);

-- Messages table for In-app messaging
CREATE TABLE Messages (
    MessageID INT PRIMARY KEY AUTO_INCREMENT,
    SenderUserID INT,
    ReceiverUserID INT,
    Content TEXT,
    Timestamp DATETIME,
    FOREIGN KEY (SenderUserID) REFERENCES Users(UserID),
    FOREIGN KEY (ReceiverUserID) REFERENCES Users(UserID)
);

-- ProjectRatings table for Ranking (projects)
CREATE TABLE ProjectRatings (
    ProjectID INT PRIMARY KEY,
    Rating FLOAT,
    FOREIGN KEY (ProjectID) REFERENCES Projects(ProjectID)
);

-- UserRatings table for Ranking (users)
CREATE TABLE UserRatings (
    UserID INT PRIMARY KEY,
    Rating FLOAT,
    FOREIGN KEY (UserID) REFERENCES Users(UserID)
);

-- TwoFactorAuth table for 2FA
CREATE TABLE TwoFactorAuth (
    UserID INT PRIMARY KEY,
    SecretKey VARCHAR(255),
    FOREIGN KEY (UserID) REFERENCES Users(UserID)
);

-- Tags table for Tags (projects & users)
CREATE TABLE Tags (
    TagID INT PRIMARY KEY AUTO_INCREMENT,
    Name VARCHAR(50) UNIQUE
);

-- ProjectTags table for Tags (projects)
CREATE TABLE ProjectTags (
    ProjectID INT,
    TagID INT,
    FOREIGN KEY (ProjectID) REFERENCES Projects(ProjectID),
    FOREIGN KEY (TagID) REFERENCES Tags(TagID)
);

-- UserSkills table for Tags (users)
CREATE TABLE UserSkills (
    UserID INT,
    TagID INT,
    FOREIGN KEY (UserID) REFERENCES Users(UserID),
    FOREIGN KEY (TagID) REFERENCES Tags(TagID)
);

-- Contributors table for Contributors list in project
CREATE TABLE Contributors (
    ContributionID INT PRIMARY KEY,
    UserID INT,
    FOREIGN KEY (ContributionID) REFERENCES Contributions(ContributionID),
    FOREIGN KEY (UserID) REFERENCES Users(UserID)
);

-- ProjectContributors table for Creator-Contributor pairing
CREATE TABLE ProjectContributors (
    ProjectID INT,
    UserID INT,
    FOREIGN KEY (ProjectID) REFERENCES Projects(ProjectID),
    FOREIGN KEY (UserID) REFERENCES Users(UserID)
);

-- Reports table for Report generation
CREATE TABLE Reports (
    ReportID INT PRIMARY KEY AUTO_INCREMENT,
    Content TEXT,
    CreatorUserID INT,
    FOREIGN KEY (CreatorUserID) REFERENCES Users(UserID)
);
